// import TIM from 'tim-js-sdk';
// import COS from "cos-js-sdk-v5";
const TIM = require('./tim.js')
const COS = require('./cos.js')
const http = require('../common/js/http/index')

let StartTime = uni.getStorageSync("infos").StartTime
let ExpiredTime = uni.getStorageSync("infos").ExpiredTime
const options = {
	SDKAppID: 1400378604 // 接入时需要将0替换为您的即时通信应用的 SDKAppID
};
// 创建 SDK 实例，TIM.create() 方法对于同一个 SDKAppID 只会返回同一份实例
const tim = TIM.create(options); // SDK 实例通常用 tim 表示
const TIMData = TIM
// 注册 COS SDK 插件
console.log(COS)
tim.registerPlugin({
	'cos-js-sdk': COS
});

// var cos1 = new COS({
// 	 TmpSecretId: '"AKIDtUWYykF_W0S5sCZ7OKu1CfeCjCBgdc1kruJQUEq2gJMyl3rXyeZyEX8R-40BRIDg"',
// 	 TmpSecretKey: '"sYse8VOi6sLk/Wj20+Y5bTpxJeI+BDtNguc8fn+Ny6I="',
// 	 XCosSecurityToken: '"NbGpDidY5OBCRD5D3co2SlGo9QeXtjrJdbc06fd54b52366d246c0dc86aa9bbe1jWsCttvujIgtxgWsJLUvGB2_zEz8GnFLZ-PauxC_pirWl3vS3F3DfHk5vjHrG-qYwLEFDvdDhrPZeZLeHzGic-UICt2ixpp-bVnQIqRDedbGD4zqfs2S5Q8TcYQxecDYMVINiovjkEiIJfTs-AHbkY4-iPQ5l2pU372ZT3Dwg6rFiQke0ef5G5pMGgyPbF8Ygtv4mEP5ZUCH2P8UIrPnCPcNfvGAlY22d_6aLEw9iqkO_JpHHLc_fHqR5X9WBoI--biVY6f9EfUKKKOU9XO6-WHUmUXU-mDdsnddYWgblXOFHXQ_2KTHum5ur1o7-5BdZO24wOMEtJsOG0tPXsWnSv1mR4Hlkdc22tTWhgZ2qepFq6-bd5fhG8Ecq6xGZgM7X67W9jT9xMms-fFLSNLbnQ0pxOtPRERd8YU1j1FwQEaDgQYZgIQfhdSl6jlRfKndqE5HjMc_pdW9r52IwWOW6Q"',
// 	 // // 建议返回服务器时间作为签名的开始时间，避免用户浏览器本地时间偏差过大导致签名错误
// 	 // StartTime: '1595829714', // 时间戳，单位秒，如：1580000000
// 	 // ExpiredTime: '1595836914', // 时间戳，单位秒，如：1580000900
// 	 // ScopeLimit: true, // 细粒度控制权限需要设为 true，会限制密钥只在相同请求时重复使用
// });
var cos = new COS({
    // 必选参数
    getAuthorization: function (options,callback) {
		let data1 = {
			action: 'GetCOSAPIKey'
		}
        // 服务端例子：https://github.com/tencentyun/qcloud-cos-sts-sdk/blob/master/scope.md
		let res =  http.getCos(data1).then((res => {
			callback({
			    TmpSecretId: res.data.Credentials.TmpSecretId,
			    TmpSecretKey: res.data.Credentials.TmpSecretKey,
			    XCosSecurityToken: res.data.Credentials.Token,
			    // 建议返回服务器时间作为签名的开始时间，避免用户浏览器本地时间偏差过大导致签名错误
			    StartTime: res.data.StartTime, // 时间戳，单位秒，如：1580000000
			    ExpiredTime: res.data.ExpiredTime, // 时间戳，单位秒，如：1580000900
			    // ScopeLimit: true, // 细粒度控制权限需要设为 true，会限制密钥只在相同请求时重复使用
			});
		}))
    }
});
// console.log(cos)


/* eslint-disable require-jsdoc */
function genTestUserSig(userID) {
	const SDKAPPID = 1400378604;
	const EXPIRETIME = 604800;
	const SECRETKEY = appkey;

	if (SDKAPPID === '' || SECRETKEY === '') {
		alert(
			'请先配置好您的账号信息： SDKAPPID 及 SECRETKEY ' +
			'\r\n\r\nPlease configure your SDKAPPID/SECRETKEY in js/debug/GenerateTestUserSig.js'
		);
	}
	const generator = new LibGenerateTestUserSig(SDKAPPID, SECRETKEY, EXPIRETIME);
	const userSig = generator.genTestUserSig(userID);
	return {
		sdkAppId: SDKAPPID,
		userSig: userSig
	};
}

export default {
	tim,
	TIMData,
	genTestUserSig,
	cos
}
