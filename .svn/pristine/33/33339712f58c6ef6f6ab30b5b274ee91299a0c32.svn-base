<template>
  <view>
    <!-- 第一个列表 -->
    <view class="list-box">
      <view>
        <image src="/static/vip/list4.png"
               mode=""></image>
        <text class="vip-list-name">发行总量</text>
        <text class="num">{{isSueObj.Issue | numFilter}}</text>
      </view>
      <view>
        <image src="/static/vip/list1.png"
               mode=""></image>
        <text class="vip-list-name">剩余总数</text>
        <text class="num">{{isSueObj.Surplus | numFilter}}</text>
      </view>
      <view>
        <image src="/static/vip/list2.png"
               mode=""></image>
        <text class="vip-list-name">流通总数</text>
        <text class="num">{{isSueObj.Circulate | numFilter}}</text>
      </view>
    </view>
    <!-- 第二个列表 -->
    <view>
      <view class="list-second">
        <view>
          <view class="image-box">
            <image src="/static/vip/jiageprice1.png"
                   mode=""
                   class="image"></image><text>今日价</text>
          </view>
          <view class="price">{{ price.todayPrice | numFilter }}</view>
        </view>
        <view>
          <view class="image-box">
            <image src="/static/vip/jiageprice2.png"
                   mode=""
                   class="image"></image><text>昨日价</text>
          </view>
          <view class="price">{{ price.yesterdayPrice | numFilter }}</view>
        </view>
        <view>
          <view class="one">历史价</view>
          <image src="/static/vip/tubiaozhexiantu.png"
                 mode=""
                 class="image2"></image>
        </view>
      </view>
    </view>
    <!-- 第三个列表 -->
    <view>
      <view class="list-second"
            style="border-top: none;">
        <view>
          <view class="image-box">
            <image src="/static/vip/xiangmuguanlifuzhi.png"
                   mode=""
                   class="image"></image><text>今日量</text>
          </view>
          <view class="price">{{ number.todayNumber | numFilter }}</view>
        </view>
        <view>
          <view class="image-box">
            <image src="/static/vip/xiangmuguanlifuzhi1.png"
                   mode=""
                   class="image"></image><text>昨日量</text>
          </view>
          <view class="price">{{ number.yesterdayNumber | numFilter }}</view>
        </view>
        <view>
          <view class="one">历史量</view>
          <image src="/static/vip/list3.png"
                 mode=""
                 class="image2"></image>
        </view>
      </view>
    </view>
    <view class="footer">
      <view class="footer-box">
        <view class="today">设置今日开盘价</view>
        <view>
          <input type="number"
                 placeholder="请输入今日开盘价"
                 v-model="ModifiedBalance" />
        </view>
      </view>
      <view class="determine"
            @click="determine">确定</view>
    </view>
  </view>
</template>

<script>
export default {
  data() {
    return {
      // 发行总量
      isSueObj: {},
      // 今日价格
      price: {},
      // 今日量
      number: {},
      // 输入框绑定的值
      ModifiedBalance: ''
    };
  },
  onLoad() {
    // 获取统计分析的数据
    this.getTotal();
  },
  methods: {
    // 获取统计分析的数据
    async getTotal() {
      let data = {
        action: 'FishStatistics',
      };
      let res = await this.$api.api.total(data);
      if (res.data.status == true) {
        console.log(res)
        this.isSueObj = res.data.issue;
        this.price = res.data.price;
        this.number = res.data.number;
      }
    },
    // 设置开盘价格
    async determine() {
      if (this.ModifiedBalance == '') {
        return this.$api.msg('请输入开盘价格')
      }
      let result = {}
      result = {
        ModifiedBalance: this.ModifiedBalance
      }
      result = JSON.stringify(result)
      let data = {
        action: 'CreateFishMoney',
        data: result
      }
      let res = await this.$api.api.setUpFc(data)
      console.log(res)
      if (res.data.status == true) {
        this.$api.msg('设置成功')
      }
    }
  },
  filters: {
    numFilter(value) {
      let realVal = ''
      if (!isNaN(value) && value !== '') {
        // 截取当前数据到小数点后两位
        realVal = parseFloat(value).toFixed(2)
      } else {
        realVal = '--'
      }
      return realVal
    }
  }
}
</script>

<style lang="scss">
.list-box {
  display: flex;
  margin-top: 20rpx;
  padding: 30rpx 0;

  > view {
    flex: 1;
    text-align: center;

    image {
      width: 70rpx;
      height: 70rpx;
    }

    text {
      display: block;
      text-align: center;
    }

    .vip-list-name {
      color: #7b7b7b;
      font-size: 26rpx;
    }

    .num {
      font-size: 22rpx;
      color: #000;
      font-weight: bold;
    }
  }
}

.list-second {
  display: flex;
  border-top: 10rpx solid #f5f5f5;
  border-bottom: 10rpx solid #f5f5f5;
  padding: 30rpx 0;

  > view {
    flex: 1;
    text-align: center;

    .price {
      font-size: 26rpx;
      font-weight: bold;
      margin-top: 18rpx;
    }

    .image-box {
      display: flex;
      align-items: center;
      justify-content: center;

      > text {
        margin-left: 20rpx;
        font-size: 28rpx;
        color: #7b7b7b;
      }
    }

    .image {
      height: 40rpx;
      width: 50rpx;
    }

    .image2 {
      width: 37rpx;
      height: 32rpx;
      margin-top: 16px;
    }

    .one {
      font-size: 28rpx;
      color: #7b7b7b;
    }
  }
}
.footer {
  margin-top: 20rpx;
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  .footer-box {
    display: flex;
    align-items: center;
    .today {
      margin-right: 20rpx;
    }
    input {
      height: 70rpx;
      padding-left: 20rpx;
      border-radius: 20rpx;
      border: 1rpx solid #67c23a;
    }
  }
  .determine {
    font-size: 34rpx;
    margin-top: 30rpx;
    // width: 140rpx;
    // height: 60rpx;
    padding: 20rpx 50rpx;
    text-align: center;
    line-height: 60rpx;
    border-radius: 20rpx;
    background-color: #f56c6c;
    color: #fff;
  }
}
</style>
